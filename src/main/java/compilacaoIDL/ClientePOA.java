package compilacaoIDL;


/**
* compilacaoIDL/ClientePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Porrinha.idl
* Wednesday, June 21, 2017 9:46:39 PM GMT-03:00
*/

public abstract class ClientePOA extends org.omg.PortableServer.Servant
 implements compilacaoIDL.ClienteOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("sentar", new java.lang.Integer (0));
    _methods.put ("escreverMensagem", new java.lang.Integer (1));
    _methods.put ("apostar", new java.lang.Integer (2));
    _methods.put ("palpite", new java.lang.Integer (3));
    _methods.put ("vencedorRodada", new java.lang.Integer (4));
    _methods.put ("empateRodada", new java.lang.Integer (5));
    _methods.put ("vencedorJogo", new java.lang.Integer (6));
    _methods.put ("sairSala", new java.lang.Integer (7));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // compilacaoIDL/Cliente/sentar
       {
         String nome = in.read_string ();
         int lugar = in.read_long ();
         this.sentar (nome, lugar);
         out = $rh.createReply();
         break;
       }

       case 1:  // compilacaoIDL/Cliente/escreverMensagem
       {
         String mensagem = in.read_string ();
         this.escreverMensagem (mensagem);
         out = $rh.createReply();
         break;
       }

       case 2:  // compilacaoIDL/Cliente/apostar
       {
         int lugar = in.read_long ();
         this.apostar (lugar);
         out = $rh.createReply();
         break;
       }

       case 3:  // compilacaoIDL/Cliente/palpite
       {
         int lugar = in.read_long ();
         int palpite = in.read_long ();
         this.palpite (lugar, palpite);
         out = $rh.createReply();
         break;
       }

       case 4:  // compilacaoIDL/Cliente/vencedorRodada
       {
         this.vencedorRodada ();
         out = $rh.createReply();
         break;
       }

       case 5:  // compilacaoIDL/Cliente/empateRodada
       {
         this.empateRodada ();
         out = $rh.createReply();
         break;
       }

       case 6:  // compilacaoIDL/Cliente/vencedorJogo
       {
         this.vencedorJogo ();
         out = $rh.createReply();
         break;
       }

       case 7:  // compilacaoIDL/Cliente/sairSala
       {
         int lugar = in.read_long ();
         this.sairSala (lugar);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:compilacaoIDL/Cliente:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Cliente _this() 
  {
    return ClienteHelper.narrow(
    super._this_object());
  }

  public Cliente _this(org.omg.CORBA.ORB orb) 
  {
    return ClienteHelper.narrow(
    super._this_object(orb));
  }


} // class ClientePOA
