package compilacaoIDL;


/**
* compilacaoIDL/ServidorPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Porrinha.idl
* Tuesday, June 20, 2017 4:55:29 PM GMT-03:00
*/

public abstract class ServidorPOA extends org.omg.PortableServer.Servant
 implements compilacaoIDL.ServidorOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getJogadores", new java.lang.Integer (0));
    _methods.put ("getJogador", new java.lang.Integer (1));
    _methods.put ("verificarNomeJogador", new java.lang.Integer (2));
    _methods.put ("verificarLugar", new java.lang.Integer (3));
    _methods.put ("atualizarLugares", new java.lang.Integer (4));
    _methods.put ("atualizarChat", new java.lang.Integer (5));
    _methods.put ("adicionarPalito", new java.lang.Integer (6));
    _methods.put ("removerPalito", new java.lang.Integer (7));
    _methods.put ("apostar", new java.lang.Integer (8));
    _methods.put ("verificarPalpitar", new java.lang.Integer (9));
    _methods.put ("palpitar", new java.lang.Integer (10));
    _methods.put ("adicionarJogador", new java.lang.Integer (11));
    _methods.put ("removerJogador", new java.lang.Integer (12));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // compilacaoIDL/Servidor/getJogadores
       {
         compilacaoIDL.Jogador $result[] = null;
         $result = this.getJogadores ();
         out = $rh.createReply();
         compilacaoIDL.ListaJogadoresHelper.write (out, $result);
         break;
       }

       case 1:  // compilacaoIDL/Servidor/getJogador
       {
         String nome = in.read_string ();
         compilacaoIDL.Jogador $result = null;
         $result = this.getJogador (nome);
         out = $rh.createReply();
         compilacaoIDL.JogadorHelper.write (out, $result);
         break;
       }

       case 2:  // compilacaoIDL/Servidor/verificarNomeJogador
       {
         String nome = in.read_string ();
         boolean $result = false;
         $result = this.verificarNomeJogador (nome);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 3:  // compilacaoIDL/Servidor/verificarLugar
       {
         String nome = in.read_string ();
         int lugar = in.read_long ();
         boolean $result = false;
         $result = this.verificarLugar (nome, lugar);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 4:  // compilacaoIDL/Servidor/atualizarLugares
       {
         this.atualizarLugares ();
         out = $rh.createReply();
         break;
       }

       case 5:  // compilacaoIDL/Servidor/atualizarChat
       {
         String nome = in.read_string ();
         String mensagem = in.read_string ();
         this.atualizarChat (nome, mensagem);
         out = $rh.createReply();
         break;
       }

       case 6:  // compilacaoIDL/Servidor/adicionarPalito
       {
         String nome = in.read_string ();
         this.adicionarPalito (nome);
         out = $rh.createReply();
         break;
       }

       case 7:  // compilacaoIDL/Servidor/removerPalito
       {
         String nome = in.read_string ();
         this.removerPalito (nome);
         out = $rh.createReply();
         break;
       }

       case 8:  // compilacaoIDL/Servidor/apostar
       {
         String nome = in.read_string ();
         boolean $result = false;
         $result = this.apostar (nome);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 9:  // compilacaoIDL/Servidor/verificarPalpitar
       {
         String nome = in.read_string ();
         boolean $result = false;
         $result = this.verificarPalpitar (nome);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 10:  // compilacaoIDL/Servidor/palpitar
       {
         String nome = in.read_string ();
         int quantidadePalitosTotal = in.read_long ();
         this.palpitar (nome, quantidadePalitosTotal);
         out = $rh.createReply();
         break;
       }

       case 11:  // compilacaoIDL/Servidor/adicionarJogador
       {
         String nome = in.read_string ();
         this.adicionarJogador (nome);
         out = $rh.createReply();
         break;
       }

       case 12:  // compilacaoIDL/Servidor/removerJogador
       {
         String nome = in.read_string ();
         this.removerJogador (nome);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:compilacaoIDL/Servidor:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Servidor _this() 
  {
    return ServidorHelper.narrow(
    super._this_object());
  }

  public Servidor _this(org.omg.CORBA.ORB orb) 
  {
    return ServidorHelper.narrow(
    super._this_object(orb));
  }


} // class ServidorPOA
